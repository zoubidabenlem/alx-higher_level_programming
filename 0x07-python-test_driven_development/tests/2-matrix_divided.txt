How to Use 2-matrix_divided.py
==============================

This module divides a matrix by an int or a float

Usage
=====

``matrix_divided(...)`` returns a new matrix that's a copy of the original one with all elements divided by ``div``.

Importing the function from the module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Defining the matrix
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]

Dividing the matrix by an int
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Note_1: decimals are rounded to the second number.

Note_2: the original matrix passed as a parameter stays unchanged
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

The function can also handle floating-point numbers.
    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Integers and floats can be combined.

    >>> matrix = [
    ...     [1.0, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
==============

The parameter ``matrix`` must be a list of lists consisting of either ints or
floats. If ``matrix`` is not a list, a TypeError is raised.
    >>> matrix = "Ilove Python *crying inside*"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Note_3: that an empty list will raise the TypeError.
    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Note_4: an empty list of lists will succeed.
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

TypeError is also raised if any element in ``matrix`` is neither int nor float.
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "C is fun", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


If any rows are of different sizes another TypeError is raised.
    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

The parameter ``div`` must be either int or float, otherwise a TypeError will be raised.
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "Python is fun too"))
    Traceback (most recent call last):
    TypeError: div must be a number

``div`` must be different than zero, otherwise ZeroDivisionError will be raised.
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
